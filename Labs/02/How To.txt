(note that this project uses python3)
Usage: python3 Main.py train <training data> <hypothesis file> <'dt'|'ada'> [maxDepth]
                    -or-
       python3 Main.py predict <hypothesis file> <data file>
                    -or-
       python3 Main.py eval <hypothesis file> <valid training file>

    Training trains either a decision tree or an adaboost ensemble (with 'dt' or 'ada'
respectively in the fourth argument) on the dataset in the training data file and then
serializes it to the hypothesis file. If maxDepth is specified, it will limit the
depth of a decision tree or define the number of hypotheses in an adaboost ensemble.
If none is provided, the decision tree will grow until exhaustion and the ensemble
will have a set default number of stumps (at time of writing, 10).

    Predict has no special features on top of the project spec. It will take a file
generated by the train option in hypothesis file and evaluate each line of the data
file against it, printing its categorization to console.

    Eval was thrown in as an integration test on the chosen attributes. It functions
in much the same was predict, but takes a training file (with labeled categories)
and calculates the hypothesis' accuracy, as well as printing the missed samples in
order to find potential new factors.

    My best generated hypothesis file can be found here:
        Data/HypothesisFiles/best.hypo