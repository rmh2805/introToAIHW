Elevation time contribution:
        Using Tobler's hiking function (probably incorrectly) to approximate pace (p) given slope (S = dh/dx) for a
    maximum speed (m): p = m * e**(3.5 * abs(S + 0.05)). Its minimum (1) is reached with a -1/20 slope, and allows for
    maximum unit speed (in our case m = 1 in order to return a percentage). Multiply distance by this value to get a
    time value.

Terrain time contribution:
        Stored in the `speedMap`, mapping terrain strings to speed values. This is my personal approximation of the
    ratios of movement speed over a flat surface of each provided terrain type with respect to paved roads (1). Divide
    distance by these values to get a time value.
        These are based entirely around my own perception, and I could comprehend speed more easily than pace, hence
    speed values given here while elevation has the more directly useful pace function.

PIL image notes:
        The image array (`Image.load()`) is accessed by `[column, row]`, not `[row, column]`.
        `Image.size` is an instance tuple of `(width, height)`.

Output:
        The paths themselves, in order to make them as jarring as possible, are in CGA Cyan and Magenta alternating
    any time a waypoint (black) is reached